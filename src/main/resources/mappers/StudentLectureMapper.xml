<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="net.spb.spb.mapper.mystudy.StudentLectureMapper">
    <!-- 검색 조건 -->
    <sql id="whereCondition">
        <where>
            tlr.lectureRegisterMemberId = #{memberId}

            <if test="pageDTO.lecture_status != null">
                and tlr.lectureRegisterStatus = #{pageDTO.lecture_status}
            </if>
            <if test="pageDTO.search_category == 'lectureTitle'.toString()">
                and tl.lectureTitle like concat('%', #{pageDTO.search_word} ,'%')
            </if>
            <if test="pageDTO.search_category == 'teacherName'.toString()">
                and tt.teacherName like concat('%', #{pageDTO.search_word} ,'%')
            </if>
        </where>
    </sql>

    <!-- 나의 강의 목록 개수 -->
    <select id="getStudentLectureTotalCount" resultType="int">
        select count(*) as total_count
        from tbl_lecture_register as tlr
        inner join tbl_lecture as tl on tlr.lectureRegisterRefIdx = tl.lectureIdx
        inner join tbl_teacher as tt on tl.lectureTeacherId = tt.teacherId
        <include refid="whereCondition"></include>
    </select>

    <!-- 나의 강의 목록 -->
    <select id="getStudentLectureList" resultType="net.spb.spb.dto.mystudy.StudentLectureResponseDTO">
        select tlr.lectureRegisterIdx as lectureRegisterIdx
             , tlr.lectureRegisterRefIdx as lectureRegisterRefIdx, tl.lectureTitle as lectureTitle, tt.teacherName as teacherName
             , tlr.lectureRegisterStartedAt as lectureRegisterStatedAt, tlr.lectureRegisterStatus as lecturRegisterStatus
        from tbl_lecture_register as tlr
        inner join tbl_lecture as tl on tlr.lectureRegisterRefIdx = tl.lectureIdx
        inner join tbl_teacher as tt on tl.lectureTeacherId = tt.teacherId
        <if test="pageDTO != null">
            <include refid="whereCondition"></include>
            <if test="pageDTO.page_skip_count != null and pageDTO.page_size != null">
                limit #{pageDTO.page_skip_count}, #{pageDTO.page_size}
            </if>
        </if>
    </select>

    <!-- 최종학습일 -->
    <select id="getLastWatchDate" resultType="java.util.Date">
        select max(tlh.lectureHistoryLastWatchDate) as lectureHistoryLastWatchDate
        from tbl_lecture as tl
        inner join tbl_lecture_chapter as tlc on tl.lectureIdx = tlc.chapterLectureIdx
        left join tbl_lecture_history as tlh on tlc.chapterIdx = tlh.lectureHistoryChapterIdx
        where tl.lectureIdx = #{lectureIdx}
        and tlh.lectureMemberId = #{memberId}
    </select>

    <!-- 진도율 -->
    <select id="getLectureProgress" resultType="int">
        select
            round(
                (
                    select count(*)
                    from tbl_lecture_history as tlh
                    inner join tbl_lecture_chapter as tlc on tlh.lectureHistoryChapterIdx = tlc.chapterIdx
                    where tlh.lectureHistoryMemberId = #{memberId}
                    and tlc.chapterLectureIdx = #{lectureIdx}
                    and tlh.lectureHistoryCompleted = 1
                ) / (
                    select count(*)
                    from tbl_lecture_chapter
                    where chapterLectureIdx = #{lectureIdx}
                ) * 100.0
            ) as lectureProgress
    </select>

    <select id="isLectureRegisteredByMemberId" resultType="boolean">
        select count(1)
        from tbl_lecture_register
        where lectureRegisterMemberId = #{memberId}
        and lectureRegisterRefIdx = #{lectureIdx}
    </select>
</mapper>