<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="net.spb.spb.mapper.TeacherFileMapper">
    <insert id="insertTeacherFile">
        insert into tbl_teacher_file (teacherFileMemberId, teacherFileTitle, teacherFileContent, teacherFileFileIdx)
        values (#{teacherFileMemberId}, #{teacherFileTitle}, #{teacherFileContent}, #{teacherFileFileIdx})
    </insert>

    <delete id="deleteTeacherFileByIdx">
        delete from tbl_teacher_file
        where teacherFileIdx = #{idx}
    </delete>

    <delete id="deleteTeacherFileByFileIdx">
        delete from tbl_teacher_file
        where teacherFileFileIdx = #{fileIdx}
    </delete>

    <sql id="condition">
        <where>
            and teacherFileMemberId = #{teacherId}
            <if test="pageDTO.search_word == 'title'">
                and teacherFileTitle like concat('%', #{pageDTO.search_word}, '%')
            </if>
            <if test="pageDTO.search_word == 'content'">
                and teacherFileContent like concat('%', #{pageDTO.search_word}, '%')
            </if>
            <if test="pageDTO.start_date != null and pageDTO.end_date != null">
                and teacherFileCreatedAt between #{pageDTO.start_date} and #{pageDTO.end_date}
            </if>
        </where>
    </sql>

    <select id="selectTeacherFileListTotalCount" resultType="int">
        select count(*)
        from tbl_teacher_file
        <include refid="condition" />
    </select>

    <select id="selectTeacherFileList" resultType="net.spb.spb.domain.TeacherFileVO">
        select teacherFileIdx, teacherFileMemberId, teacherFileTitle, teacherFileContent, teacherFileCreatedAt, teacherFileFileIdx
        from tbl_teacher_file
        <include refid="condition" />
        order by ${pageDTO.sort_by} ${pageDTO.sort_direction}
        limit #{pageDTO.page_skip_count}, #{pageDTO.page_size}
    </select>

    <select id="selectTeacherFileByIdx" resultType="net.spb.spb.dto.teacher.TeacherFileResponseDTO">
        select
            ttf.teacherFileIdx,
            ttf.teacherFileMemberId,
            tt.teacherName,
            tm.memberProfileImg as teacherProfileImg,
            ttf.teacherFileTitle,
            ttf.teacherFileContent,
            ttf.teacherFileCreatedAt,
            ttf.teacherFileUpdatedAt,
            ttf.teacherFileFileIdx
        from tbl_teacher_file as ttf
        inner join tbl_teacher as tt on ttf.teacherFileMemberId = tt.teacherId
        inner join tbl_member as tm on tt.teacherId = tm.memberId
        where teacherFileIdx = #{idx}
    </select>

    <select id="selectFileByIdx" resultType="net.spb.spb.domain.FileVO">
        select tf.fileIdx, tf.fileName, tf.filePath, tf.fileExt, tf.fileSize, tf.fileOrgName
        from tbl_file as tf
        inner join tbl_teacher_file as ttf on tf.fileIdx = ttf.teacherFileFileIdx
        where ttf.teacherFileIdx = #{idx}
    </select>
</mapper>